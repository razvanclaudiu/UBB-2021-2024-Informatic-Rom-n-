     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  extern exit               
     5                                  import exit msvcrt.dll    
     6                                                            
     7                                  segment data use32 class=data
     8 00000000 2D                          a db 45
     9 00000001 4E00                        b dw 78
    10 00000003 63000000                    e dd 99
    11 00000007 3200000000000000            x dq 50
    12                                      temp resd 0
    13                                  ;(a*a/b+b*b)/(2+b)+e-x cu semn
    14                                  segment code use32 class=code
    15                                      start:
    16                                          ;a*a
    17 00000000 A0[00000000]                    mov al, [a]     ;AL = a
    18 00000005 F625[00000000]                  mul byte [a]    ;AX = a*a
    19                                          
    20                                          ;a*a/b
    21 0000000B 6699                            cwd             ;DX:AX = a*a
    22 0000000D 66F73D[01000000]                idiv word [b]   ;AX = a*a/b, DX = a*a%b
    23 00000014 6689C3                          mov bx, ax      ;BX = a*a/b
    24                                          
    25                                          ;b*b
    26 00000017 66A1[01000000]                  mov ax, [b]     ;AX = b
    27 0000001D 66F72D[01000000]                imul word [b]   ;DX:AX = b*b
    28 00000024 6689C1                          mov cx, ax      ;
    29 00000027 6689D8                          mov ax, bx      ;AX = a*a/b
    30 0000002A 6689D3                          mov bx, dx      ;BX:CX = b*b
    31                                  
    32                                          
    33                                          ;(a*a/b+b*b)
    34 0000002D 6698                            cbw             ;DX:AX = a*a/b
    35 0000002F 6601C8                          add ax, cx      ;
    36 00000032 6611DA                          adc dx, bx      ;DX:AX = a*a/b+b*b
    37                                          
    38                                          ;(a*a/b+b*b)/(2+b)
    39 00000035 668B1D[01000000]                mov bx, [b]     ; BX = b
    40 0000003C 6683C302                        add bx, 2       ; BX = b + 2
    41 00000040 66F7FB                          idiv bx         ; AX = DX:AX/BX, DX = DX:AX%BX
    42                                          
    43                                          ;(a*a/b+b*b)/(2+b)+e
    44 00000043 98                              cwde            ;EAX = (a*a/b+b*b)/(2+b)
    45 00000044 0305[03000000]                  add eax, [e]    ;EAX = (a*a/b+b*b)/(2+b)+e
    46                                          
    47                                          ;(a*a/b+b*b)/(2+b)+e-x
    48 0000004A 99                              cdq                     ;EDX:EAX = (a*a/b+b*b)/(2+b)+e
    49 0000004B 8B1D[07000000]                  mov ebx, dword [x]      ;
    50 00000051 8B0D[0B000000]                  mov ecx, dword [x+4]    ;ECX:EBX = x
    51 00000057 29D8                            sub eax, ebx            ;
    52 00000059 19CA                            sbb edx, ecx            ;EDX:EAX = (a*a/b+b*b)/(2+b)+e-x
    53                                          
    54 0000005B 6A00                            push    dword 0      
    55 0000005D FF15[00000000]                  call    [exit]       
