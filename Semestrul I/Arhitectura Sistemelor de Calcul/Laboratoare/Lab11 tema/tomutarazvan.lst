     1                                  bits 32 
     2                                  
     3                                  
     4                                  global start        
     5                                  
     6                                  
     7                                  extern exit, fopen, fclose, fread, printf               
     8                                  import exit msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fread msvcrt.dll
    12                                  import printf msvcrt.dll
    13                                                            
    14                                  
    15                                  
    16                                  segment data use32 class=data
    17 00000000 7200                        mod_accesr db "r", 0
    18                                      
    19 00000002 FFFFFFFF                    desc_fis dd -1
    20                                  
    21 00000006 696E7075742E747874-         nume_fisier db "input.txt", 0
    21 0000000F 00                 
    22                                      
    23 00000010 256300                      format db "%c", 0
    24                                      
    25                                      len equ 100
    26 00000013 00<rept>                    text times len db 0
    27                                      
    28                                  
    29                                  segment code use32 class=code
    30                                      start:
    31 00000000 68[00000000]                    push dword mod_accesr
    32 00000005 68[06000000]                    push dword nume_fisier
    33 0000000A FF15[00000000]                  call [fopen]
    34 00000010 83C408                          add esp, 8
    35                                          
    36 00000013 A3[02000000]                    mov [desc_fis], eax
    37 00000018 83F800                          cmp eax, 0
    38 0000001B 7460                            je final
    39                                          
    40 0000001D FF35[02000000]                  push dword [desc_fis]
    41 00000023 6A64                            push dword len
    42 00000025 6A01                            push dword 1
    43 00000027 68[13000000]                    push dword text
    44 0000002C FF15[00000000]                  call [fread]
    45 00000032 83C410                          add esp, 16
    46                                          
    47 00000035 BE00000000                      mov esi, 0
    48 0000003A BB39000000                      mov ebx, '9'
    49                                          
    50                                      repeta:
    51 0000003F 8A86[13000000]                  mov al, [text+esi]
    52 00000045 3C00                            cmp al, 0
    53 00000047 7420                            jz afisare
    54 00000049 3C30                            cmp al, '0'
    55 0000004B 7C0B                            jl reset
    56 0000004D 3C39                            cmp al, '9'
    57 0000004F 7F07                            jg reset
    58 00000051 A801                            test al, 1h
    59 00000053 7B06                            jnp gasit
    60 00000055 46                              inc esi
    61 00000056 EBE7                            jmp repeta
    62                                          
    63                                      reset:
    64 00000058 46                              inc esi
    65 00000059 EBE4                            jmp repeta
    66                                          
    67                                      gasit:
    68 0000005B 46                              inc esi
    69 0000005C 38C3                            cmp bl, al
    70 0000005E 7CDF                            jl repeta
    71 00000060 88C3                            mov bl, al
    72 00000062 BA01000000                      mov edx, 1
    73 00000067 EBD6                            jmp repeta
    74                                          
    75                                      afisare:
    76 00000069 83FA00                          cmp edx, 0
    77 0000006C 740F                            jz final
    78 0000006E 53                              push dword ebx
    79 0000006F 68[10000000]                    push dword format
    80 00000074 FF15[00000000]                  call [printf]
    81 0000007A 83C408                          add esp, 8
    82                                      
    83                                      final:
    84 0000007D FF35[02000000]                  push dword [desc_fis]
    85 00000083 FF15[00000000]                  call [fclose]
    86 00000089 83C404                          add esp, 4
    87                                         
    88 0000008C 6A00                            push    dword 0      
    89 0000008E FF15[00000000]                  call    [exit]       
