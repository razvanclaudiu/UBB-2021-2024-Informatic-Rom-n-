     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  
     6                                  extern exit, printf, scanf, getchar
     7                                  import exit msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import getchar msvcrt.dll
    11                                  
    12                                  extern subsir
    13                                  
    14                                  ;10. Se citesc mai multe siruri de caractere. Sa se determine daca primul apare ca subsecventa in fiecare din celelalte si sa se dea un mesaj corespunzator.                         
    15                                  segment data use32 class=data
    16 00000000 00000000                    nr dd 0 ;nr de siruri citite
    17 00000004 256400                      format_nr db "%d", 0
    18 00000007 2531305B302D39612D-         format_sir_initial db "%10[0-9a-zA-Z \.]%n", 0 
    18 00000010 7A412D5A205C2E5D25-
    18 00000019 6E00               
    19 0000001B 202533305B302D3961-         format_sir db " %30[0-9a-zA-Z \.]%n", 0
    19 00000024 2D7A412D5A205C2E5D-
    19 0000002D 256E00             
    20 00000030 496E74726F64756365-         mesaj_intr1 db "Introduceti sirul initial de maxim 10 caractere: ", 0
    20 00000039 746920736972756C20-
    20 00000042 696E697469616C2064-
    20 0000004B 65206D6178696D2031-
    20 00000054 302063617261637465-
    20 0000005D 72653A2000         
    21 00000062 496E74726F64756365-         mesaj_intr2 db "Introduceti numarul de siruri: ", 0
    21 0000006B 7469206E756D617275-
    21 00000074 6C2064652073697275-
    21 0000007D 72693A2000         
    22 00000082 496E74726F64756365-         mesaj_repeta db "Introduceti %d siruri: ", 0
    22 0000008B 746920256420736972-
    22 00000094 7572693A2000       
    23 0000009A 536972756C20657869-         mesaj_gasit db "Sirul exista in toate celelalte siruri", 0
    23 000000A3 73746120696E20746F-
    23 000000AC 6174652063656C656C-
    23 000000B5 616C74652073697275-
    23 000000BE 726900             
    24 000000C1 536972756C206E7520-         mesaj_negasit db "Sirul nu exista in toate celelalte siruri", 0
    24 000000CA 65786973746120696E-
    24 000000D3 20746F617465206365-
    24 000000DC 6C656C616C74652073-
    24 000000E5 697275726900       
    25 000000EB 0D00                        newline db `\r`, 0
    26 000000ED 00000000                    len_initial dd 0
    27 000000F1 00000000                    len dd 0
    28 000000F5 00000000                    sir_initial dd 0
    29 000000F9 <res 00000006>              resb 6  ;rezervam 6 biti ptr lungimea potentiala maxima de 10 caractere
    30 000000FF 00000000                    sir dd 0
    31 00000103 <res 0000001A>              resb 26 ; rezervam 26 biti ptr lungimea potentiala maxima de 30 de caractere
    32                                  segment code use32 class=code
    33                                      start:
    34                                          ;mesaj ptr sirul initial
    35 00000000 68[30000000]                    push dword mesaj_intr1
    36 00000005 FF15[00000000]                  call [printf]
    37 0000000B 83C404                          add esp, 4*1
    38                                          
    39                                          ;se citeste de la tastatura sirul si se salveaza si lungimea
    40 0000000E 68[ED000000]                    push dword len_initial
    41 00000013 68[F5000000]                    push dword sir_initial
    42 00000018 68[07000000]                    push dword format_sir_initial
    43 0000001D FF15[00000000]                  call [scanf]
    44 00000023 83C40C                          add esp, 4*3
    45 00000026 832D[F1000000]01                sub [len], dword 1
    46                                          
    47                                          ;mesaj ptr numarul de siruri
    48 0000002D 68[62000000]                    push dword mesaj_intr2
    49 00000032 FF15[00000000]                  call [printf]
    50 00000038 83C404                          add esp, 4*1
    51                                          
    52                                          ;nr de siruri care urmeaza a fi citite
    53 0000003B 68[00000000]                    push dword nr
    54 00000040 68[04000000]                    push dword format_nr 
    55 00000045 FF15[00000000]                  call [scanf]
    56 0000004B 83C408                          add esp, 4*2
    57                                          
    58                                          ;in BL se salveaza numarul de siruri ce trebuie citite
    59                                          ;in BH este folosit pentru a verifica la final daca s-a gasit sirul initial in toate celelalte siruri
    60 0000004E BB00000000                      mov ebx, 0
    61 00000053 B701                            mov bh, 1
    62 00000055 8A1D[00000000]                  mov bl, [nr]
    63 0000005B 80FB00                          cmp bl, 0
    64 0000005E 0F8487000000                    jz final
    65                                          
    66                                          ;mesaj ptr "nr" siruri
    67 00000064 FF35[00000000]                  push dword [nr]
    68 0000006A 68[82000000]                    push dword mesaj_repeta
    69 0000006F FF15[00000000]                  call [printf]
    70 00000075 83C408                          add esp, 4*2
    71                                          
    72                                      repeta:
    73                                          ;citirea sirurilor de nr ori
    74 00000078 68[F1000000]                    push dword len
    75 0000007D 68[FF000000]                    push dword sir
    76 00000082 68[1B000000]                    push dword format_sir
    77 00000087 FF15[00000000]                  call [scanf]
    78 0000008D 83C40C                          add esp, 4*3
    79 00000090 832D[F1000000]01                sub [len], dword 1
    80                                          
    81                                          ;apelarea functiei subsir care verifica daca sirul initial este subsir a sirului tocmai citit
    82 00000097 68[F5000000]                    push dword sir_initial
    83 0000009C 68[FF000000]                    push dword sir
    84 000000A1 FF35[ED000000]                  push dword [len_initial]
    85 000000A7 FF35[F1000000]                  push dword [len]
    86 000000AD E8(00000000)                    call subsir
    87 000000B2 83C410                          add esp, 4*4
    88                                          
    89                                          ;newline
    90 000000B5 68[EB000000]                    push dword newline
    91 000000BA FF15[00000000]                  call [printf]
    92 000000C0 83C404                          add esp, 4*1
    93                                          
    94                                          ;trece la urmatorul sir
    95 000000C3 80EB01                          sub bl, 1
    96 000000C6 75B0                            jnz repeta
    97                                      
    98                                      ;verifica daca s-a gasit sirul initial in toate celelalte siruri
    99 000000C8 80FF00                      cmp bh, 0
   100 000000CB 7410                        jz notfound
   101                                      
   102                                      ;mesaj daca s-a gasit
   103 000000CD 68[9A000000]                push dword mesaj_gasit
   104 000000D2 FF15[00000000]              call [printf]
   105 000000D8 83C404                      add esp, 4*1
   106 000000DB EB0E                        jmp final
   107                                      
   108                                      ;mesaj daca nu s-a gasit
   109                                      notfound:
   110 000000DD 68[C1000000]                    push dword mesaj_negasit
   111 000000E2 FF15[00000000]                  call [printf]
   112 000000E8 83C404                          add esp, 4*1
   113                                              
   114                                      final:
   115                                          
   116                                          ;doua getchar pentru a nu se inchide automat consola la final
   117 000000EB FF15[00000000]                  call [getchar]
   118 000000F1 FF15[00000000]                  call [getchar]
   119                                          
   120 000000F7 6A00                            push    dword 0      
   121 000000F9 FF15[00000000]                  call    [exit]       
